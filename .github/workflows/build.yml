name: Docker Image Construction

on:
  workflow_dispatch:
    inputs:
      frontend_branch:
        description: 'Tapdata-Enterprise-Web Repo Branch:'
        required: true
        type: string
        default: 'develop'
      connectors_branch:
        description: 'Tapdata-Connectors Repo Branch:'
        required: true
        type: string
        default: 'main'

env:
  REGISTRY: ghcr.io

jobs:

  Set-Branch:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      TAPDATA_BRANCH: ${{ steps.set-outputs.outputs.TAPDATA_BRANCH }}
    steps:
      - name: Set Env
        run: |
          echo "TAPDATA_BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Set Outpus
        id: set-outputs
        run: |
          echo "::set-output name=TAPDATA_BRANCH::${TAPDATA_BRANCH}"

  Sync-Code-to-Internal-Repo:
    runs-on: ubuntu-latest
    needs:
      - Set-Branch
    steps:
      - name: Checkout Tapdata Code
        uses: actions/checkout@v3
        with:
          repository: 'tapdata/tapdata'
          ref: ${{ needs.Set-Branch.outputs.TAPDATA_BRANCH }}
          token: ${{ secrets.TAPDATA_ENT_CICD_TOKEN }}
          path: tapdata
          fetch-depth: 0
      - name: Checkout Tapdata Connectors Code
        uses: actions/checkout@v3
        with:
          repository: 'tapdata/tapdata-connectors'
          ref: ${{ inputs.connectors_branch }}
          token: ${{ secrets.TAPDATA_ENT_CICD_TOKEN }}
          path: tapdata-connectors
          fetch-depth: 0
      - name: Checkout Tapdata Enterprise Web Code
        uses: actions/checkout@v3
        with:
          repository: 'tapdata/tapdata-enterprise-web'
          ref: ${{ inputs.frontend_branch }}
          token: ${{ secrets.TAPDATA_ENT_CICD_TOKEN }}
          path: tapdata-enterprise-web
          fetch-depth: 0
      - name: Checkout Tapdata Application
        uses: actions/checkout@v2
        with:
          repository: 'tapdata/tapdata-application'
          ref: main
          token: ${{ secrets.TAPDATA_ENT_CICD_TOKEN }}
          path: tapdata-application
          fetch-depth: 0
      - name: Push Tapdata to Gogs
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            bash tapdata-application/build/upgrade.sh --upgrade-code=true --upgrade-code-path=tapdata --gogs-project-name=tapdata
      - name: Push Tapdata Connectors to Gogs
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            bash tapdata-application/build/upgrade.sh --upgrade-code=true --upgrade-code-path=tapdata-connectors --gogs-project-name=tapdata-connectors
      - name: Push Tapdata Enterprise Web to Gogs
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            bash tapdata-application/build/upgrade.sh --upgrade-code=true --upgrade-code-path=tapdata-enterprise-web --gogs-project-name=tapdata-enterprise-web
      - name: Push Tapdata Application to Gogs
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            bash tapdata-application/build/upgrade.sh --upgrade-code=true --upgrade-code-path=tapdata-application --gogs-project-name=tapdata-application

  Build:
    runs-on: office-scan
    timeout-minutes: 60
    needs:
      - Set-Branch
      - Sync-Code-to-Internal-Repo
    steps:
      - name: Checkout Tapdata Repo
        run: |
          rm -rf tapdata
          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
          git clone -b ${{ needs.Set-Branch.outputs.TAPDATA_BRANCH }} --single-branch ssh://git@192.168.1.170:10022/tapdata/tapdata.git
          cd tapdata && git fetch --tags
      - name: Checkout Connectors Code
        run: |
          rm -rf tapdata-connectors
          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
          git clone -b ${{ inputs.connectors_branch }} --single-branch ssh://git@192.168.1.170:10022/tapdata/tapdata-connectors.git
          cd tapdata-connectors && git fetch --tags
      - name: Checkout Frontend Code
        run: |
          rm -rf tapdata-enterprise-web
          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
          git clone -b ${{ inputs.frontend_branch }} --single-branch ssh://git@192.168.1.170:10022/tapdata/tapdata-enterprise-web.git
          cd tapdata-enterprise-web && git fetch --tags
      - name: Checkout Tapdata Application
        run: |
          rm -rf tapdata-application
          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
          git clone -b main --single-branch ssh://git@192.168.1.170:10022/tapdata/tapdata-application.git
      - name: Build Frontend
        run: |
          pnpm config set registry https://registry.npmmirror.com
          cd tapdata-application && bash build/build.sh -c tapdata-enterprise-web -u false -m productioin -t v3.12-open
      - name: compile opensource tapdata
        run: |
          cd tapdata-application && bash build/build.sh -c tapdata -P true -u false -l "-Dmaven.compile.fork=true -P idaas"
      - name: compile tapdata connectors
        run: |
          cd tapdata-application && bash build/build.sh -c opensource-connectors -u false -P true -l "-Dmaven.compile.fork=true"
      - name: Build Image
        run: |
          cd tapdata && bash build/build.sh -p true -o image
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ secrets.TAPDATA_REGISTRY }}
          username: ${{ secrets.TAPDATA_REGISTRY_USERNAME }}
          password: ${{ secrets.TAPDATA_REGISTRY_PASSWORD }}
      - name: Push Image
        run: |
          docker_tag=`cat tapdata/build/image/tag`
          docker tag $docker_tag ${{ secrets.TAPDATA_REGISTRY }}/tapdata/tapdata:v3.12-open
          docker push ${{ secrets.TAPDATA_REGISTRY }}/tapdata/tapdata:v3.12-open
