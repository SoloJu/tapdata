{
  "properties": {
    "name": "Kafka",
    "icon": "icons/kafka.png",
    "doc": "${doc}",
    "id": "kafka",
    "authentication": "Alpha",
    "tags": [
      "Database",
      "schema-free"
    ]
  },
  "configOptions": {
    "connection": {
      "type": "object",
      "properties": {
        "nameSrvAddr": {
          "required": true,
          "type": "string",
          "title": "${nameSrvAddr}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "mq_nameSrvAddr",
          "x-index": 1
        },
        "schemaRegister": {
          "type": "boolean",
          "title": "${schemaRegister}",
          "default": false,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "apiServerKey": "schemaRegister",
          "x-reactions": [
            {
              "target": "*(schemaRegisterUrl)",
              "fulfill": {
                "state": {
                  "visible": "{{$self.value===true}}"
                }
              }
            }
          ],
          "x-index": 2
        },
        "basicAuth": {
          "type": "boolean",
          "title": "${basicAuth}",
          "default": false,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "apiServerKey": "basicAuth",
          "x-reactions": [
            {
              "target": "*(authCredentialsSource,authUserName,authPassword)",
              "fulfill": {
                "state": {
                  "visible": "{{$self.value===true}}"
                }
              }
            }
          ],
          "x-index": 4
        },
        "schemaRegisterUrl": {
          "required": true,
          "type": "string",
          "title": "${schemaRegisterUrl}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "schemaRegisterUrl",
          "x-index": 3
        },
        "authCredentialsSource": {
          "required": true,
          "type": "string",
          "title": "${authCredentialsSource}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "authCredentialsSource",
          "x-index": 5
        },
        "authUserName": {
          "required": true,
          "type": "string",
          "title": "${authUserName}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "database_username",
          "x-index": 6
        },
        "authPassword": {
          "required": true,
          "type": "string",
          "title": "${authPassword}",
          "x-decorator": "FormItem",
          "x-component": "Password",
          "apiServerKey": "database_password",
          "x-index": 7
        },
        "mqTopicString": {
          "type": "string",
          "title": "${mqTopicString}",
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "tooltip": "${mqTopicStringTooltip}"
          },
          "x-component": "Input",
          "apiServerKey": "mq_topics",
          "x-index": 8
        },
        "krb5": {
          "type": "boolean",
          "title": "${krb5}",
          "default": false,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "apiServerKey": "krb5",
          "x-reactions": [
            {
              "target": "*(krb5Keytab,krb5Conf,krb5Principal,krb5ServiceName)",
              "fulfill": {
                "state": {
                  "visible": "{{$self.value===true}}"
                }
              }
            },
            {
              "target": "*(mqUsername,mqPassword,kafkaSaslMechanism)",
              "fulfill": {
                "state": {
                  "visible": "{{$self.value===false}}"
                }
              }
            }
          ],
          "x-index": 9
        },
        "krb5Keytab": {
          "type": "string",
          "title": "${krb5Keytab}",
          "x-decorator": "FormItem",
          "x-component": "TextFileReader",
          "x-component-props": {
            "base64": true
          },
          "apiServerKey": "krb5Keytab",
          "fileNameField": "krb5KeytabFile",
          "required": true,
          "x-index": 20
        },
        "krb5Conf": {
          "type": "string",
          "title": "${krb5Conf}",
          "x-decorator": "FormItem",
          "x-component": "TextFileReader",
          "x-component-props": {
            "base64": true
          },
          "apiServerKey": "krb5Conf",
          "fileNameField": "krb5ConfFile",
          "required": true,
          "x-index": 30
        },
        "krb5Principal": {
          "type": "string",
          "title": "${krb5Principal}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "krb5Principal",
          "required": true,
          "x-index": 40
        },
        "krb5ServiceName": {
          "type": "string",
          "title": "${krb5ServiceName}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "krb5ServiceName",
          "required": true,
          "x-index": 50
        },
        "mqUsername": {
          "type": "string",
          "title": "${mqUsername}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "mq_username",
          "x-index": 60
        },
        "mqPassword": {
          "type": "string",
          "title": "${mqPassword}",
          "x-decorator": "FormItem",
          "x-component": "Password",
          "apiServerKey": "mq_password",
          "x-index": 70
        },
        "kafkaSaslMechanism": {
          "type": "string",
          "title": "${kafkaSaslMechanism}",
          "default": "PLAIN",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "apiServerKey": "kafkaSaslMechanism",
          "x-index": 80,
          "enum": [
            {
              "label": "PLAIN",
              "value": "PLAIN"
            },
            {
              "label": "SHA256",
              "value": "SHA256"
            },
            {
              "label": "SHA512",
              "value": "SHA512"
            }
          ]
        },
        "kafkaIgnoreInvalidRecord": {
          "type": "boolean",
          "title": "${kafkaIgnoreInvalidRecord}",
          "default": false,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "apiServerKey": "kafkaIgnoreInvalidRecord",
          "x-index": 90
        },
        "kafkaAcks": {
          "type": "string",
          "title": "${kafkaAcks}",
          "default": "-1",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "apiServerKey": "kafkaAcks",
          "x-index": 100,
          "enum": [
            {
              "label": "${not_sure}",
              "value": "0"
            },
            {
              "label": "${just_write_master}",
              "value": "1"
            },
            {
              "label": "${write_most_isr}",
              "value": "-1"
            },
            {
              "label": "${write_all_isr}",
              "value": "all"
            }
          ]
        },
        "kafkaCompressionType": {
          "type": "string",
          "title": "${kafkaCompressionType}",
          "default": "gzip",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "apiServerKey": "kafkaCompressionType",
          "x-index": 110,
          "enum": [
            {
              "label": "gzip",
              "value": "gzip"
            },
            {
              "label": "snappy",
              "value": "snappy"
            },
            {
              "label": "lz4",
              "value": "lz4"
            },
            {
              "label": "zstd",
              "value": "zstd"
            }
          ]
        },
        "kafkaIgnorePushError": {
          "type": "boolean",
          "title": "${kafkaIgnorePushError}",
          "default": false,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "apiServerKey": "kafkaIgnorePushError",
          "x-index": 120
        }
      }
    },
    "node":{
      "properties": {
        "enableScript": {
          "title": "${enableScript}",
          "type": "boolean",
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "x-decorator-props": {
            "tooltip": "${scriptTooltip}"
          }
        },
        "script": {
          "type": "string",
          "required": false,
          "default": "function process(record, op, conditionKeys){\n\n\t\/\/ Enter your code at here\n\t return record;\n}",
          "x-decorator": "FormItem",
          "x-component": "JsEditor",
          "x-component-props": {
            "options": { "showPrintMargin": false, "useWrapMode": true },
            "includeBeforeAndAfter": true,
            "before": "function process(record, op, conditionKeys){",
            "beforeRegexp": "^[^]*function\\s+process\\s*\\(record, op, conditionKeys\\)\\{",
            "afterRegexp": "}[^}]*$",
            "after": "}"
          },
          "x-reactions": {
            "dependencies": [
              "nodeConfig.enableScript"
            ],
            "fulfill": {
              "schema": {
                "x-decorator-props.style.display": "{{$deps[0]===true ? null:\"none\"}}"
              }
            }
          }
        }
      }
    }
  },
  "messages": {
    "default": "en_US",
    "en_US": {
      "doc": "docs/kafka_en_US.md",
      "nameSrvAddr": "DB Host",
      "mqTopicString": "topic expression",
      "mqTopicStringTooltip": "Multiple topics are separated by commas, support *? wildcard expression (non regular)",
      "krb5": "kerberos authentication",
      "krb5Keytab": "Key representation file",
      "krb5Conf": "Configuration file",
      "krb5Principal": "Body Configuration",
      "krb5ServiceName": "Service name",
      "mqUsername": "User Name",
      "mqPassword": "Password",
      "kafkaSaslMechanism": "Encryption",
      "kafkaIgnoreInvalidRecord": "Ignore non-JSON Object format messages",
      "kafkaAcks": "ACK confirmation mechanism",
      "not_sure": "Do not confirm",
      "just_write_master": "Write to master partition only",
      "write_most_isr": "Write to most ISR partitions",
      "write_all_isr": "Write to all ISR partitions",
      "kafkaCompressionType": "Message compression type",
      "kafkaIgnorePushError": "Ignore push message exception",
      "schemaRegister": "schemaRegister",
      "schemaRegisterUrl": "schemaRegisterUrl",
      "authCredentialsSource": "authCredentialsSource",
      "authUserName": "authUserName",
      "authPassword": "authPassword",
      "basicAuth": "basicAuth",
      "enableScript": "Custom message body format",
      "script": "script",
      "scriptTooltip": "1. Parameter Description:\n· 'record' is the data record, including 'header' and 'data', where 'data' contains 'before' and 'after'.\n· 'op' represents the operation type, with a total of 3 options: insert, update, and delete.\n· 'conditionKeys' is the collection of primary key field names.\n2. Examples:\n· Add the operation type to the Kafka message: record.data.op = op\n· Add a custom header: record.header.test='test header'\n· Delete the 'before' field: delete record.data.before\n· Discard the data record: return null"
    },
    "zh_CN": {
      "doc": "docs/kafka_zh_CN.md",
      "nameSrvAddr": "数据库地址",
      "mqTopicString": "主题表达式",
      "mqTopicStringTooltip": "多个主题用逗号分隔，支持*?通配表达式（非正则）",
      "krb5": "kerberos 认证",
      "krb5Keytab": "密钥表示文件",
      "krb5Conf": "配置文件",
      "krb5Principal": "主体配置",
      "krb5ServiceName": "服务名",
      "mqUsername": "账号",
      "mqPassword": "密码",
      "kafkaSaslMechanism": "加密方式",
      "kafkaIgnoreInvalidRecord": "忽略非JSON对象格式消息",
      "kafkaAcks": "ACK确认机制",
      "not_sure": "不确认",
      "just_write_master": "仅写入master分区",
      "write_most_isr": "写入大多数ISR分区",
      "write_all_isr": "写入所有ISR分区",
      "kafkaCompressionType": "消息压缩类型",
      "kafkaIgnorePushError": "忽略推送消息异常",
      "schemaRegister": "模式注册",
      "schemaRegisterUrl": "模式注册地址",
      "authCredentialsSource": "认证凭据来源",
      "authUserName": "认证用户名",
      "authPassword": "认证密码",
      "basicAuth": "基本认证",
      "enableScript": "自定义消息体格式",
      "script": "脚本",
      "scriptTooltip": "1.参数说明\n·record为每条数据记录，包含header和data，data中包含before和after\n·op为操作类型，共3种：insert，update，delete\n·conditionKeys为主键字段名集合\n2.示例\n·kafka message中添加操作类型: record.data.op = op\n·添加自定义header: record.header.test='test header'\n·删除before: delete record.data.before\n·丢弃该条数据: return null"
    },
    "zh_TW": {
      "doc": "docs/kafka_zh_TW.md",
      "nameSrvAddr": "數據庫地址",
      "mqTopicString": "主題表達式",
      "mqTopicStringTooltip": "多個主題用逗號分隔，支持*?通配運算式（非正則）",
      "krb5": "kerberos 認證",
      "krb5Keytab": "密鑰表示文件",
      "krb5Conf": "配置文件",
      "krb5Principal": "主体配置",
      "krb5ServiceName": "服務名",
      "mqUsername": "賬號",
      "mqPassword": "密碼",
      "kafkaSaslMechanism": "加密方式",
      "kafkaIgnoreInvalidRecord": "忽略非JSON對象格式消息",
      "kafkaAcks": "ACK確認機制",
      "not_sure": "不確認",
      "just_write_master": "僅寫入master分區",
      "write_most_isr": "寫入大多數ISR分區",
      "write_all_isr": "寫入所有ISR分區",
      "kafkaCompressionType": "消息壓縮類型",
      "kafkaIgnorePushError": "忽略推理消息異常",
      "schemaRegister": "模式註冊",
      "schemaRegisterUrl": "模式註冊地址",
      "authCredentialsSource": "認證憑據來源",
      "authUserName": "認證用戶名",
      "authPassword": "認證密碼",
      "basicAuth": "基本認證",
      "enableScript": "自定義消息體格式",
      "script": "腳本",
      "scriptTooltip": "1.參數說明\n·record為每條數據記錄，包含header和data，data中包含before和after\n·op為操作類型，共有 3 種：insert，update，delete\n·conditionKeys為主鍵字段名集合\n2.示例\n·在 Kafka message中添加操作類型：record.data.op = op\n·添加自訂header：record.header.test = 'test header'\n·刪除before：delete record.data.before\n·丟棄該條數據：return null"
    }
  },
  "dataTypes": {
    "OBJECT": {
      "to": "TapMap"
    },
    "ARRAY": {
      "to": "TapArray"
    },
    "NUMBER": {
      "precision": [
        1,
        1000
      ],
      "scale": [
        0,
        1000
      ],
      "fixed": true,
      "preferPrecision": 20,
      "preferScale": 8,
      "priority": 1,
      "to": "TapNumber"
    },
    "INTEGER": {
      "bit": 32,
      "priority": 1,
      "value": [
        -2147483648,
        2147483647
      ],
      "to": "TapNumber"
    },
    "BOOLEAN": {
      "to": "TapBoolean"
    },
    "STRING": {
      "byte": 200,
      "priority": 1,
      "defaultByte": 200,
      "preferByte": 200,
      "to": "TapString"
    },
    "TEXT": {
      "to": "TapString"
    }
  }
}